name: Using matrix strategy with "exclude" and "include"

on: push

jobs:
  test-matrix-exclude:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
        python-version: [3.9, 3.10]

        exclude:
          - node-version: 18
            python-version: 3.10

    steps:
      - run: echo "Testing with Node ${{ matrix.node-version }} and Python ${{ matrix.python-version }}"

  test-matrix-include:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [18, 20]

        include:
          - os: macos-latest
            node-version: 21

    steps:
      - run: echo "Testing on ${{ matrix.os }} with Node ${{ matrix.node-version }}"

  test-matrix:
    runs-on: ${{ matrix.os }}
    outputs:
      experimental-status: ${{ matrix.experimental }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [18, 20]

        include:
          - node-version: 20
            experimental: true

          - os: windows-latest
            extra-env: 'NODE_OPTIONS=--openssl-legacy-provider'

    steps:
      - name: Setup environment and run tests
        env:
          EXTRA_ENV_VAR: ${{ matrix.extra_env }}
        shell: bash
        run: |
          echo "OS: ${{ matrix.os }}"
          echo "Node version: ${{ matrix.node-version }}"
          echo "Extra Env: $EXTRA_ENV_VAR"

          if [[ "${{ matrix.experimental }}" == "true" ]]; then
            echo "This is an experimental build!"
          fi
